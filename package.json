{
    "name": "amazonaws-com-iam-connector",
    "version": "2010.0.0",
    "description": "AWS Identity and Access Management AWS Identity and Access Management (IAM) is a\nweb service that you can use to manage users and user permissions under your AWS\naccount. This guide provides descriptions of IAM actions that you can call\nprogrammatically. For general information about IAM, see AWS Identity and Access\nManagement (IAM) [http://aws.amazon.com/iam/]. For the user guide for IAM, see \nUsing IAM [http://docs.aws.amazon.com/IAM/latest/UserGuide/]. \n\nAWS provides SDKs that consist of libraries and sample code for various\nprogramming languages and platforms (Java, Ruby, .NET, iOS, Android, etc.). The\nSDKs provide a convenient way to create programmatic access to IAM and AWS. For\nexample, the SDKs take care of tasks such as cryptographically signing requests\n(see below), managing errors, and retrying requests automatically. For\ninformation about the AWS SDKs, including how to download and install them, see\nthe Tools for Amazon Web Services [http://aws.amazon.com/tools/] page. \n\nWe recommend that you use the AWS SDKs to make programmatic API calls to IAM.\nHowever, you can also use the IAM Query API to make direct calls to the IAM web\nservice. To learn more about the IAM Query API, see Making Query Requests\n[http://docs.aws.amazon.com/IAM/latest/UserGuide/IAM_UsingQueryAPI.html] in the \nUsing IAM guide. IAM supports GET and POST requests for all actions. That is,\nthe API does not require you to use GET for some actions and POST for others.\nHowever, GET requests are subject to the limitation size of a URL. Therefore,\nfor operations that require larger sizes, use a POST request. \n\n Signing Requests \n\nRequests must be signed using an access key ID and a secret access key. We\nstrongly recommend that you do not use your AWS account access key ID and secret\naccess key for everyday work with IAM. You can use the access key ID and secret\naccess key for an IAM user or you can use the AWS Security Token Service to\ngenerate temporary security credentials and use those to sign requests.\n\nTo sign requests, we recommend that you use Signature Version 4\n[http://docs.aws.amazon.com/general/latest/gr/signature-version-4.html]. If you\nhave an existing application that uses Signature Version 2, you do not have to\nupdate it to use Signature Version 4. However, some operations now require\nSignature Version 4. The documentation for operations that require version 4\nindicate this requirement. \n\n Additional Resources \n\nFor more information, see the following:\n\n *   AWS Security Credentials\n   [http://docs.aws.amazon.com/general/latest/gr/aws-security-credentials.html].\n   This topic provides general information about the types of credentials used\n   for accessing AWS. \n   \n   \n *   IAM Best Practices\n   [http://docs.aws.amazon.com/IAM/latest/UserGuide/IAMBestPractices.html]. This\n   topic presents a list of suggestions for using the IAM service to help secure\n   your AWS resources. \n   \n   \n *   Signing AWS API Requests\n   [http://docs.aws.amazon.com/general/latest/gr/signing_aws_api_requests.html].\n   This set of topics walk you through the process of signing a request using an\n   access key ID and secret access key.",
    "main": "component.json",
    "dependencies": {
        "elasticio-node": "0.0.9",
        "elasticio-sailor-nodejs": "^2.2.1",
        "swagger-client": "^3.8.22"
    },
    "author": {
        "name": "Deutsche Telekom AG"
    },
    "license": "Apache-2.0"
}